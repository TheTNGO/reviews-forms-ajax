	// DOES NOT WORK 
	
	@PostMapping("/{id}/add-tag")
	public String addTagToReview(@PathVariable(value = "id") long reviewId, @RequestParam(value = "name") String name) {

		Optional<Review> reviewOptional = reviewRepo.findById(reviewId);
		Review review = reviewOptional.get();
		Long reviewOptionalId = review.getId();

		Tag tagSearchResult = tagRepo.findByNameIgnoreCaseLike(name);

		if (!(tagSearchResult == null)) {

			Collection<Review> reviewSearchResults = reviewRepo.findByTagsId(tagSearchResult.getId());
			if (!(reviewSearchResults.contains(reviewOptionalId))) {
				tagSearchResult.addReview(review);
				tagRepo.save(tagSearchResult);
				return "Tag found. Review NOT found. Adding review to Tag. Tag Saved.";
			}

			return "Tag found. Review found. Doing nothing (supposedly).";

		} else {
			tagSearchResult = new Tag(name, review);
			tagRepo.save(tagSearchResult);
			return "Tag NOT found. Creating new tag and adding review to it. Tag Saved.";
		}

	}

	// WORKS but has errors; repo should bring up a collection of reviews (many to many relationship)

	@PostMapping("/{id}/add-tag")
	public String addTagToReview(@PathVariable(value = "id") long reviewId, @RequestParam(value = "name") String name) {

		Optional<Review> reviewOptional = reviewRepo.findById(reviewId);
		Review review = reviewOptional.get();

		Tag tagSearchResult = tagRepo.findByNameIgnoreCaseLike(name);

		if (!(tagSearchResult == null)) {

			Review reviewSearchResult = reviewRepo.findByTagsId(tagSearchResult.getId());
			if (reviewSearchResult != review ) {
				tagSearchResult.addReview(review);
				tagRepo.save(tagSearchResult);
				return "Tag found. Review NOT found. Adding review to Tag. Tag Saved.";
			}

			return "Tag found. Review found. Doing nothing (supposedly).";

		} else {
			tagSearchResult = new Tag(name, review);
			tagRepo.save(tagSearchResult);
			return "Tag NOT found. Creating new tag and adding review to it. Tag Saved.";
		}

	}
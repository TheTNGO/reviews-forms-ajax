	/* Single Tag Tests */
	
//	@Test
//	public void shouldBeOkForSingleTag() throws Exception {
//		long arbitraryTagId = 1;
//		when(tagRepo.findById(arbitraryTagId)).thenReturn(Optional.of(tag1));
//		mvc.perform(get("/tag?id=1")).andExpect(status().isOk());
//	}

//	@MockBean
//	private TagRepository tagRepo;

//	@Mock
//	private Tag tag1;


let reviewIdTag = document.querySelector('#reviewId');
let reviewId = reviewIdTag.innerText;

console.log(reviewId);

const reviewIdXhr = new XMLHttpRequest()
reviewIdXhr.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
            jsonResponse = JSON.parse(reviewIdXhr.response);
            console.log({jsonResponse, reviewIdXhr});

        }
    }

reviewIdXhr.open('GET', `http://localhost:8080/reviews-json/${reviewId}`);
reviewIdXhr.send();


const xhr = new XMLHttpRequest()
xhr.onreadystatechange = function () {
    if (this.readyState == 4 && this.status == 200) {

        const resJsonObjects = JSON.parse(xhr.response);
        console.log({resJsonObjects, xhr});

        const tagsContainer = document.querySelector('#tagsContainer');

        resJsonObjects.forEach(function(tag){
            
            const tagItem = document.createElement('div');
            tagsContainer.appendChild(tagItem);

            const tagName = document.createElement('p');
            tagName.innerText = tag.name;

            tagItem.appendChild(tagName);
            


        });
       
    }
}

xhr.open('GET', 'http://localhost:8080/tags-json', true)
xhr.send()